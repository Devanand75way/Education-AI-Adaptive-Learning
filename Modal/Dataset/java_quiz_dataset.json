[
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "easy"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which keyword is used to handle exceptions in Java?",
        "options": [
            "catch",
            "throw",
            "throws",
            "try"
        ],
        "answer": "try",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "medium"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "easy"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "hard"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which access modifier makes a variable accessible only within the same class?",
        "options": [
            "public",
            "private",
            "protected",
            "default"
        ],
        "answer": "private",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "hard"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which method starts the execution of a thread?",
        "options": [
            "run()",
            "execute()",
            "start()",
            "launch()"
        ],
        "answer": "start()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "hard"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which class is the parent of all exception classes?",
        "options": [
            "Throwable",
            "Exception",
            "RuntimeException",
            "Error"
        ],
        "answer": "Throwable",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "What is the size of int in Java?",
        "options": [
            "2 bytes",
            "4 bytes",
            "8 bytes",
            "16 bytes"
        ],
        "answer": "4 bytes",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "easy"
    },
    {
        "topic": "Java Exceptions",
        "question": "Which exception is thrown when an array is accessed with an invalid index?",
        "options": [
            "NullPointerException",
            "ArrayIndexOutOfBoundsException",
            "ArithmeticException",
            "ClassCastException"
        ],
        "answer": "ArrayIndexOutOfBoundsException",
        "difficulty": "hard"
    },
    {
        "topic": "Java Collections",
        "question": "Which method is used to add elements to a List in Java?",
        "options": [
            "insert()",
            "append()",
            "add()",
            "push()"
        ],
        "answer": "add()",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which Java collection allows storing key-value pairs?",
        "options": [
            "List",
            "Set",
            "Map",
            "Queue"
        ],
        "answer": "Map",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "hard"
    },
    {
        "topic": "Java Basics",
        "question": "Which method is the entry point of a Java program?",
        "options": [
            "start()",
            "main()",
            "run()",
            "execute()"
        ],
        "answer": "main()",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "easy"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which class is used to create a thread in Java?",
        "options": [
            "Runnable",
            "Thread",
            "Executor",
            "Process"
        ],
        "answer": "Thread",
        "difficulty": "medium"
    },
    {
        "topic": "Java Multithreading",
        "question": "Which keyword is used to synchronize threads in Java?",
        "options": [
            "sync",
            "locked",
            "synchronized",
            "mutex"
        ],
        "answer": "synchronized",
        "difficulty": "easy"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "Which feature of OOP allows a class to acquire properties of another class?",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Abstraction",
            "Polymorphism"
        ],
        "answer": "Inheritance",
        "difficulty": "medium"
    },
    {
        "topic": "Java Collections",
        "question": "Which collection class maintains insertion order?",
        "options": [
            "HashSet",
            "TreeSet",
            "ArrayList",
            "HashMap"
        ],
        "answer": "ArrayList",
        "difficulty": "medium"
    },
    {
        "topic": "Java OOPs",
        "question": "What is the process of defining multiple methods with the same name but different parameters?",
        "options": [
            "Overloading",
            "Overriding",
            "Encapsulation",
            "Polymorphism"
        ],
        "answer": "Overloading",
        "difficulty": "medium"
    },
    {
        "topic": "Java Basics",
        "question": "Which keyword is used to define a constant variable in Java?",
        "options": [
            "const",
            "let",
            "final",
            "static"
        ],
        "answer": "final",
        "difficulty": "medium"
    }
]